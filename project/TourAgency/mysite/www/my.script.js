(function () {
    // Будем работать в соответствии с требованиями современного стандарта
    // ECMAScript. Включим строгий режим.
    "use strict";
    // Весь наш основной сценарий будет работать уже после загрузки документа
    jQuery(function () {
        // Пишем обработчик события для выбора значения в первом списке
        // Нас интересует событие изменения значения поля
        $( '#country' ).change(function () {
            // При изменении значения первого списка мы должны удалить
            // все имеющиеся значения во втором и третьем, а также
            // сделать их неактивными
            $( '#city, #hotel' ).find( 'option:not(:first)' )    // Ищем все теги option, не являющиеся тегом по умолчанию
                .remove()   // Удаляем эти теги
                // Чтобы сделать поля неактивными, неправильно менять значение атрибута disabled
                // Теперь нам нужно изменять значение свойства disabled объектов полей списка,
                // так как мы работаем с ними через библиотеку jQuery
                .end()      // Возвращаемся к исходному объекту
                .prop( 'disabled',true );       // Делаем поля неактивными
            // Сохраним выбранное значение списка в переменную
            var country_id = $( this ).val();
			alert("country_id");
            // Если выбрано значение по умолчанию, ничего не делаем
            if (country_id == 0) { return; }
            // В ином случае нам необходимо отправить запрос на сервер
            // AJAX-запрос к серверу мы выполним, используя метод jQuery ajax()
            $.ajax({
                type: "POST",   // Тип запроса
                url: "query.php",   // Путь к сценарию, обработающему запрос
                dataType: "json",   // Тип данных, в которых сервер должен прислать ответ
                data: "query=getcity&country_id=" + country_id,  // Строка POST-запроса
                error: function () {    // Обработчик, который будет запущен в случае неудачного запроса
                    alert( "При выполнении запроса произошла ошибка :(" );  // Сообщение о неудачном запросе
                },
                success: function ( data ) { // Обработчик, который будет запущен после успешного запроса
                    // В ответ на наш запрос сервер должен прислать массив значений
                    // Мы его вставим в поле второго списка с помощью цикла for
                    for ( var i = 0; i < data.length; i++ ) {
                        // Каждое полученное значение вставим в список видов транспорта
                        $( '#city' ).append( '<option value="' + data[i].city_id + '">' + data[i].city + '</option>' );
                    }
                    // После того, как мы сформировали список, мы можем сделать его активным
                    // обратившись к его свойству disabled
                    $( '#city' ).prop( 'disabled', false ); // Включаем поле
                }
            });
        });
        // Пишем обработчик события для выбора значения во втором списке
        // Нас интересует событие изменения значения поля
        $( '#city' ).change(function () {
            // При изменении значения второго списка мы должны удалить
            // все имеющиеся значения в третьем, а также
            // сделать его неактивными
            $( '#hotel' ).find( 'option:not(:first)' )   // Ищем все теги option, не являющиеся тегом по умолчанию
                .remove()   // Удаляем эти теги
                // Чтобы сделать поле неактивным, неправильно менять значение атрибута disabled
                // Теперь нам нужно изменять значение свойства disabled объекта поля списка,
                // так как мы работаем с ним через библиотеку jQuery
                .end()      // Возвращаемся к исходному объекту
                .prop( 'disabled',true );       // Делаем поле неактивным
            // Сохраним выбранное значение списка в переменную
            var city_id = $( this ).val();
            // Сохраним выбранное значение типа транспорта в переменную
            var country_id = $( '#country' ).val();
            // Если выбрано значение по умолчанию, ничего не делаем
            if (country_id == 0) { return; }
            // В ином случае нам необходимо отправить запрос на сервер
            // AJAX-запрос к серверу мы выполним, используя метод jQuery ajax()
            $.ajax({
                type: "POST",   // Тип запроса
                url: "query.php",   // Путь к сценарию, обработающему запрос
                dataType: "json",   // Тип данных, в которых сервер должен прислать ответ
                data: "query=gethotel&country_id=" + country_id + "&city_id=" + city_id, // Строка POST-запроса
                error: function () {    // Обработчик, который будет запущен в случае неудачного запроса
                    alert( "При выполнении запроса произошла ошибка :(" );  // Сообщение о неудачном запросе
                },
                success: function ( data ) { // Обработчик, который будет запущен после успешного запроса
                    // В ответ на наш запрос сервер должен прислать массив значений
                    // Мы его вставим в поле третьего списка с помощью цикла for
                    for ( var i = 0; i < data.length; i++ ) {
                        // Каждое полученное значение вставим в список категорий транспорта
                        $( '#hotel' ).append( '<option value="' + data[i].hotel_id + '">' + data[i].hotel + '</option>' );
                    }
                    // После того, как мы сформировали список, мы можем сделать его активным
                    // обратившись к его свойству disabled
                    $( '#hotel' ).prop( 'disabled', false ); // Включаем поле
                }
            });
        });
        // Никакие обработчичик для поля третьего списка не нужны
    }); // Функция ожидания загрузки документа jQuery
})(); // Немедленно вызываемая функция